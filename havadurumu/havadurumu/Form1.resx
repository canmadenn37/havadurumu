<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhgAAAG4AAAAAAAAAAAAA
        AAAAAABjAAAAjgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFAAAAuAAA
        ABYAAAAAAAAAAAAAACgAAAC+AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgAAACRAAAAPwAAAAAAAAAAAAAAAAAAAHkAAABeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAAACAAAAAAAAAA0AAAAIAAAABAAAAAMAAAAAAAAACgAAAAwAAAADAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAdQAAAEQAAAAAAAAAAAAAAAAAAABcAAAAYAAAAAAAAAAAAAAAAAAAAEAAAAB4AAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABhAAAAqQAAAAkAAAAAAAAAAAAAAEAAAAC7AAAAGgAAAAAAAAAAAAAAJAAA
        AL8AAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAACoAAAANAAAAAAAAAAAAAAABQAAAJUAAABTAAAAAAAA
        AAAAAAAAAAAAeQAAAHUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAEAAAAAwAAAB4AAAAQAAAAAwAAAAQAAAADAAAAGAAA
        ABcAAAACAAAAAAAAAAIAAAASAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAATQICApAJCQmsCwsLrwsLC68LCwuvCwsLrQsLC64LCwuvCwsLrwsL
        C68LCwuuCgoKrxscHJ6dn6FbHBwcnQoKCq8ICAioAQEBfwAAACwAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIQkJCalFRkf3jo+S/62usf+wsbT/sLG0/7CxtP+wsbT/sLG0/7Cx
        tP+wsbT/sLG0/7CxtP+vsLP/vL3A/ufp7fu8vcD+sLG0/6iqrf9xdHn/HiAi3wAAAFMdHSEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcLDAy0ent9/+fp7P/3+f3/9/n9//f5/f/3+f3/9/n9//f5
        /f/3+f3/9/n9//f5/f/3+f3/9/n9//f5/f/2+Pz/9Pb6//b4/P/3+f3/9/n9//L2/P+qsLr/HyAj3wAA
        AC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfl1eX/vu7/P/9Pb6//P1+f/z9fn/8/X5//P1
        +f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5/+3z
        /P9xd37/AAAAgwYGBwAAAAAAAAAAIgAAADYAAAAAAAAAAAAAAAARERHYtre7//f5/f/z9fn/8/X5//P1
        +f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1
        +f/z9fn/8fX9/6Kps/8JCguvAAAAAgAAACYAAAC1AAAAZwAAAAAAAAAAAAAAACcnKPrX2d3/9ff7//P1
        +f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1
        +f/z9fn/8/X5//P1+f/x9v3/nKOt/wcHCLUAAAAIAAAAfwAAAHkAAAAGAAAAAAAAAAAAAAAAJSUm+NbX
        2//19/v/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1
        +f/z9fn/8/X5//P1+f/z9fn/9Pb6/+ju+P9fZGv/BQwR7wECAmwAAAATAAAABgAAAAAAAAAAAAAAAAAA
        AAANDQ7QrrCz//f5/f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1
        +f/z9fn/9ff7//f5/f/3+f3/9/n9//f5/f/n6/L/h4qR/yQ7R/9HjLj/Fyw88QAAAFcAAQEAAAAAAAAA
        AAAAAAAAAAAAAAAAAHFRUlP56Ort//X3+//z9fn/8/X5//P1+f/z9fn/8/X5//P1+f/z9fn/8/X5//P1
        +f/z9fn/8/X5//T2+//Y2t7/mJiZ/4aGiP+Ghoj/fH1//0lNUv8lQE7/VKbN/2rP//9Jj77/ChMa0AAA
        ABwAAAAAAAAAAAAAAAAAAAAAAAAAEAcHB6NnaGr/3N7h//b4/P/3+f3/9Pb6//P1+f/z9fn/8/X5//P1
        +f/z9fn/8/X5//P1+f/z9vv/ztTd/0BHTP8nTV//MmR9/zJkfP80aYP/Royu/2LA7f9q0P//ac7//2TC
        /P8mS2X9AAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwQEBJM0NDXudHV3/5+go//n6e3/9Pb6//P1
        +f/z9fn/8/X5//P1+f/z9fn/8/X5/+/0/f+HjJT/KVFk/2fL+v9q0f//atH//2vR//9r0f//ac///2nO
        //9pzv//aMv//0F+qf8CBQelAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADcAAAB3ERES38HC
        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
        AB//8AAP/+EAR//jw+f//+f////n////5/8=
</value>
  </data>
</root>